from ast import literal_eval
from os import getenv
from dotenv import load_dotenv, find_dotenv

load_dotenv(find_dotenv())

ENV = getenv("ENV", "local").lower()
APP_NAME = getenv("APP_NAME", "report-consumer-1")
LOG_LEVEL = getenv("LOG_LEVEL", "INFO")

KAFKA_PRODUCER_CLIENT_ID = getenv("KAFKA_PRODUCER_CLIENT_ID", "")
KAFKA_CONSUMER_TOPIC_NAME = getenv("KAFKA_CONSUMER_TOPIC_NAME", "")
KAFKA_CONSUMER_GROUP_ID = getenv("KAFKA_CONSUMER_GROUP_ID", APP_NAME)
KAFKA_CONSUMER_CLIENT_ID = getenv("KAFKA_CONSUMER_CLIENT_ID")
KAFKA_CONSUMER_AUTO_OFFSET_RESET = getenv(
    "KAFKA_CONSUMER_AUTO_OFFSET_RESET", "earliest"
)
KAFKA_CONSUMER_MAX_POLL_RECORDS = int(getenv("KAFKA_CONSUMER_MAX_POLL_RECORDS", 1))
KAFKA_CONSUMER_DEFAULT_POLL_TIMEOUT_MS = int(
    getenv("KAFKA_CONSUMER_DEFAULT_POLL_TIMEOUT_MS", 1000)
)


MAX_STATEMENT_TIMEOUT = int(getenv("MAX_STATEMENT_TIMEOUT", 60))

MONGO_DB_REPORT_NAME = getenv("MONGO_DB_REPORT_NAME")
REPORT_MONGO_URI = getenv("REPORT_MONGO_URI")

MONGO_DB_REPORT_NAME = getenv("MONGO_DB_REPORT_NAME")
MONGO_MAX_TIME_MS = int(getenv("MONGO_MAX_TIME_MS", "180000"))
IS_TIME_ADJUSTMENT_REQUIRED = getenv("IS_TIME_ADJUSTMENT_REQUIRED", 'False').lower() in ('true', '1', 't')

REPORT_CATEGORY_BATCH_SIZE_MAPPING = literal_eval(getenv("REPORT_CATEGORY_BATCH_SIZE_MAPPING"))